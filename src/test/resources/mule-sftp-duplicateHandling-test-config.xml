<?xml version="1.0" encoding="utf-8"?>

<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:spring="http://www.springframework.org/schema/beans"
	  xmlns:sftp="http://www.mulesource.org/schema/mule/sftp/2.2"
	  xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
	  xmlns:test="http://www.mulesource.org/schema/mule/test/2.2"
	  xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
               http://www.mulesource.org/schema/mule/sftp/2.2 http://www.mulesource.org/schema/mule/sftp/2.2/mule-sftp.xsd
               http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
               http://www.mulesource.org/schema/mule/test/2.2 http://www.mulesource.org/schema/mule/test/2.2/mule-test.xsd">

	<sftp:connector name="sftp" pollingFrequency="2000">
		<custom-exception-strategy class="org.mule.transport.sftp.notification.ExceptionListener"/>
	</sftp:connector>

  <sftp:connector name="sftpAddSeq" pollingFrequency="2000" duplicateHandling="addSeqNo">
		<custom-exception-strategy class="org.mule.transport.sftp.notification.ExceptionListener"/>
	</sftp:connector>

	<!--
	  Test 1 - test duplicate handling by throwing an exception
	  -->
	<model name="send1">
		<service name="sending1">
			<inbound>
				<vm:inbound-endpoint path="test.upload1"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data1"
						outputPattern="${DATE}.dat" connector-ref="sftp"
						duplicateHandling="throwException"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive1">
		<service name="receiving1">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint
					name="inboundEndpoint1"
					synchronous="true" connector-ref="sftp"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data1"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

	<!--
	  Test 2 - test duplicate handling by overwriting the existing file
	  -->
	<model name="send2">
		<service name="sending2">
			<inbound>
				<vm:inbound-endpoint path="test.upload2"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data2"
						outputPattern="${DATE}.dat" connector-ref="sftp"
						duplicateHandling="overwrite"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive2">
		<service name="receiving2">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint
					name="inboundEndpoint2"
					synchronous="true" connector-ref="sftp"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data2"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

	<!--
	  Test 3 - test duplicate handling by adding a sequence number to the new file
	  -->
	<model name="send3">
		<service name="sending3">
			<inbound>
				<vm:inbound-endpoint path="test.upload3"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data3"
						outputPattern="${DATE}.dat" connector-ref="sftp"
						duplicateHandling="addSeqNo"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive3">
		<service name="receiving3">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint
					name="inboundEndpoint3"
					synchronous="true" connector-ref="sftp"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data3"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

  <!--
    Test 4 - test duplicate handling by using the value set on the connector (addSeqNo)
    -->
  <model name="send4">
    <service name="sending4">
      <inbound>
        <vm:inbound-endpoint path="test.upload4"/>
      </inbound>
      <outbound>
        <pass-through-router>
          <sftp:outbound-endpoint
            address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data4"
            outputPattern="${DATE}.dat" connector-ref="sftpAddSeq" name="send4outbound"/>
        </pass-through-router>
      </outbound>
    </service>
  </model>

  <model name="receive4">
    <service name="receiving4">
      <inbound>
        <!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
        <sftp:inbound-endpoint
          name="inboundEndpoint4"
          synchronous="true" connector-ref="sftp"
          address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/~/data4"/>
      </inbound>
      <component>
        <singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
      </component>
    </service>
  </model>


</mule>