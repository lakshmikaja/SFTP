<?xml version="1.0" encoding="utf-8"?>

<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
	  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	  xmlns:spring="http://www.springframework.org/schema/beans"
	  xmlns:sftp="http://www.mulesource.org/schema/mule/sftp/2.2"
	  xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
	  xmlns:test="http://www.mulesource.org/schema/mule/test/2.2"
	  xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
               http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
               http://www.mulesource.org/schema/mule/sftp/2.2 http://www.mulesource.org/schema/mule/sftp/2.2/mule-sftp.xsd
               http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
               http://www.mulesource.org/schema/mule/test/2.2 http://www.mulesource.org/schema/mule/test/2.2/mule-test.xsd">

	<sftp:connector name="sftp" pollingFrequency="2000"/>

	<spring:bean name="endpointMessageNotificationLogger" class="org.mule.transport.sftp.notification.EndpointMessageNotificationTestListener"/>
	<spring:bean name="sftpTransportNotificationLogger" class="org.mule.transport.sftp.notification.SftpTransportNotificationTestListener"/>
	<notifications>
		<notification event="ENDPOINT-MESSAGE"/>
		<notification event="CUSTOM"/>
		<notification-listener ref="endpointMessageNotificationLogger"/>
		<notification-listener ref="sftpTransportNotificationLogger"/>
	</notifications>
	
	<!-- 
	  Test 1 - plain archive functionality with no extra features enabled 
	  -->
	<model name="send1">
		<service name="sending1">
			<inbound>
				<vm:inbound-endpoint path="test.upload1"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data1" 
						outputPattern="${DATE}.dat"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive1">
		<service name="receiving1">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint 
					name="inboundEndpoint1" 
					synchronous="true"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data1"
					archiveDir="${ARCHIVE}"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

	<!--
	  Test 2 - archive functionality with full usage of temp-dir and creation of unique names of temp-files 
	  -->
	<model name="send2">
		<service name="sending2">
			<inbound>
				<vm:inbound-endpoint path="test.upload2"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data2" 
						outputPattern="${DATE}.dat"
						tempDir="tmp_receiving"
						useTempFileTimestampSuffix="true"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive2">
		<service name="receiving2">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint 
					name="inboundEndpoint2" 
					synchronous="true"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data2"
					tempDir="tmp_sending"
					useTempFileTimestampSuffix="true"
					archiveDir="${ARCHIVE}"
					archiveTempReceivingDir="tmp_receiving"
					archiveTempSendingDir="tmp_sending"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

	<!--
	  Test 3 - archive functionality with usage of temp-dir for inbound and outbound endpoints with creation of unique names of temp-files but not for the archive 
	  -->
	<model name="send3">
		<service name="sending3">
			<inbound>
				<vm:inbound-endpoint path="test.upload3"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data3" 
						outputPattern="${DATE}.dat"
						tempDir="tmp_receiving"
						useTempFileTimestampSuffix="true"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive3">
		<service name="receiving3">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint 
					name="inboundEndpoint3" 
					synchronous="true"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data3"
					tempDir="tmp_sending"
					useTempFileTimestampSuffix="true"
					archiveDir="${ARCHIVE}"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

	<!--
	  Test 4 - archive functionality with usage of temp-dir for archive but not for inbound and outbound endpoints 
	  -->
	<model name="send4">
		<service name="sending4">
			<inbound>
				<vm:inbound-endpoint path="test.upload4"/>
			</inbound>
			<outbound>
				<pass-through-router>
					<sftp:outbound-endpoint
						address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data4" 
						outputPattern="${DATE}.dat"/>
				</pass-through-router>
			</outbound>
		</service>
	</model>

	<model name="receive4">
		<service name="receiving4">
			<inbound>
				<!-- synchronous="true" - otherwise the inbound endpoint will trigger several times -->
				<sftp:inbound-endpoint 
					name="inboundEndpoint4" 
					synchronous="true"
					address="sftp://${USER1_NAME}:${USER1_PASSWORD}@${SFTP_HOST}/data4"
					archiveDir="${ARCHIVE}"
					archiveTempReceivingDir="tmp_receiving"
					archiveTempSendingDir="tmp_sending"/>
			</inbound>
			<component>
				<singleton-object class="org.mule.tck.functional.FunctionalTestComponent"/>
			</component>
		</service>
	</model>

</mule>



